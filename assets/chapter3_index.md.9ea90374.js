import{l as a,f as e,G as n}from"./framework.5c8a4622.js";const t='{"title":"基本介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍"}],"relativePath":"chapter3/index.md","lastUpdated":1628927998784}',o={},p=n('<h2 id="基本介绍"><a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a> 基本介绍</h2><p>在「Vue3」中，创建一个组件实例由 <code>createApp</code> 「API」完成。创建完一个组件实例，我们需要调用 <code>mount()</code> 方法将组件实例挂载到页面中：</p><div class="language-javascript"><pre><code><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>在源码中整个组件的创建过程: <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bad79ad4e3104fb3a54ae81ce6473125~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p><code>mountComponent()</code> 实现的核心是 <code>setupComponent()</code>，它可以分为<strong>两个过程</strong>：</p><ul><li>开始安装，它会初始化 <code>props</code>、<code>slots</code>、调用 <code>setup()</code>、验证组件和指令的合理性。</li><li>结束安装，它会初始化 <code>computed</code>、<code>data</code>、<code>watch</code>、<code>mixin</code> 和生命周期等等。</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6fb6aae2fb364c9295c308ec73d5c154~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><p>那么，接下来我们来详细地分析一下这两个过程。</p>',8);o.render=function(n,t,o,s,c,d){return a(),e("div",null,[p])};export default o;export{t as __pageData};
