import { Plugin as Plugin_2 } from 'vite';
import { SFCScriptCompileOptions } from '@vue/compiler-sfc';
import { SFCStyleCompileOptions } from '@vue/compiler-sfc';
import { SFCTemplateCompileOptions } from '@vue/compiler-sfc';
import { ViteDevServer } from 'vite';

export declare interface Options {
    include?: string | RegExp | (string | RegExp)[];
    exclude?: string | RegExp | (string | RegExp)[];
    ssr?: boolean;
    isProduction?: boolean;
    script?: Partial<SFCScriptCompileOptions>;
    template?: Partial<SFCTemplateCompileOptions>;
    style?: Partial<SFCStyleCompileOptions>;
}

export declare function parseVueRequest(id: string): {
    filename: string;
    query: VueQuery;
};

export declare interface ResolvedOptions extends Options {
    root: string;
    devServer?: ViteDevServer;
}

declare function vuePlugin(rawOptions?: Options): Plugin_2;
export default vuePlugin;

export declare interface VueQuery {
    vue?: boolean;
    src?: boolean;
    type?: 'script' | 'template' | 'style' | 'custom';
    index?: number;
    lang?: string;
}

export { }
